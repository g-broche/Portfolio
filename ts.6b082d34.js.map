{"version":3,"sources":["src/ts/index.ts"],"names":[],"mappings":"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","file":"ts.6b082d34.js","sourceRoot":"..","sourcesContent":["/* ********** IMPORTS ********** */\r\nimport { Photo } from './interfaces/model';\r\n\r\n/* ********** DATABASE AND HELPER FUNCTION********** */\r\nconst pathToImg = '../src/assets/pictures/';\r\n\r\nasync function getImagePath(fileNamePattern: string): Promise<string> {\r\n    const imagePath = await import(`../src/assets/pictures/${fileNamePattern}`);\r\n    return imagePath.default;\r\n}\r\n\r\nasync function loadImagePaths(image: Photo): Promise<Photo> {\r\n    const fileNames = image.fileNames;\r\n    const loadedFileNames = await Promise.all([\r\n        getImagePath(await fileNames.xsmall),\r\n        getImagePath(await fileNames.small),\r\n        getImagePath(await fileNames.medium),\r\n        getImagePath(await fileNames.large)\r\n    ]);\r\n    return {\r\n        ...image,\r\n        fileNames: {\r\n            xsmall: loadedFileNames[0],\r\n            small: loadedFileNames[1],\r\n            medium: loadedFileNames[2],\r\n            large: loadedFileNames[3]\r\n        }\r\n    };\r\n}\r\n\r\nconst PhotoCollection: Promise<Photo>[] = [\r\n    {\r\n        id: 1,\r\n        title: \"Bee and sunflower\",\r\n        fileNames: {\r\n            xsmall: getImagePath(\"bee-sunflower_160.webp\"),\r\n            small: getImagePath(\"bee-sunflower_240.webp\"),\r\n            medium: getImagePath(\"bee-sunflower_480.webp\"),\r\n            large: getImagePath(\"bee-sunflower_720.webp\"),\r\n        },\r\n        tag: [\"abeille\", \"tournesol\"]\r\n    },\r\n    {\r\n        id: 2,\r\n        title: \"Crabier chevelu\",\r\n        fileNames: {\r\n            xsmall: getImagePath(\"crabier_160.webp\"),\r\n            small: getImagePath(\"crabier_240.webp\"),\r\n            medium: getImagePath(\"crabier_480.webp\"),\r\n            large: getImagePath(\"crabier_720.webp\"),\r\n        },\r\n        tag: [\"crabier\"]\r\n    },\r\n    {\r\n        id: 3,\r\n        title: \"Renard du soir\",\r\n        fileNames: {\r\n            xsmall: getImagePath(\"fox_160.webp\"),\r\n            small: getImagePath(\"fox_240.webp\"),\r\n            medium: getImagePath(\"fox_480.webp\"),\r\n            large: getImagePath(\"fox_720.webp\"),\r\n        },\r\n        tag: [\"renard\"]\r\n    },\r\n    {\r\n        id: 4,\r\n        title: \"Hermine\",\r\n        fileNames: {\r\n            xsmall: getImagePath(\"hermine_160.webp\"),\r\n            small: getImagePath(\"hermine_240.webp\"),\r\n            medium: getImagePath(\"hermine_480.webp\"),\r\n            large: getImagePath(\"hermine_720.webp\"),\r\n        },\r\n        tag: [\"hermine\"]\r\n    },\r\n    {\r\n        id: 5,\r\n        title: \"Libellule en vol\",\r\n        fileNames: {\r\n            xsmall: getImagePath(\"libellule_160.webp\"),\r\n            small: getImagePath(\"libellule_240.webp\"),\r\n            medium: getImagePath(\"libellule_480.webp\"),\r\n            large: getImagePath(\"libellule_720.webp\"),\r\n        },\r\n        tag: [\"libellule\"]\r\n    },\r\n    {\r\n        id: 6,\r\n        title: \"Marmottes du Taillefer\",\r\n        fileNames: {\r\n            xsmall: getImagePath(\"marmottes_160.webp\"),\r\n            small: getImagePath(\"marmottes_240.webp\"),\r\n            medium: getImagePath(\"marmottes_480.webp\"),\r\n            large: getImagePath(\"marmottes_720.webp\"),\r\n        },\r\n        tag: [\"marmottes\"]\r\n    },\r\n].map(loadImagePaths);\r\n\r\n/* ********** PAGE ELEMENTS ********** */\r\n\r\nconst pictureGrid = document.getElementById(\"picture-grid\");\r\nconst modalPictureContainer = document.getElementById(\"modal-picture-container\");\r\nconst modalPicture = document.getElementById(\"modal-picture-img\");\r\nconst modalPrevious = document.getElementById(\"modal-picture-previous\");\r\nconst modalNext = document.getElementById(\"modal-picture-next\");\r\nconst modalClose = document.getElementById(\"modal-picture-close\");\r\n\r\n/* ********** LOGIC CONST AND VARIABLES ********** */\r\n\r\n\r\n/* ********** EVENT LISTENERS ********** */\r\n\r\n\r\n/* ********** FUNCTIONS ********** */\r\n\r\nasync function createOnePicture(image: Photo): Promise<Element> {\r\n    let newPictureContainer = document.createElement(\"picture\");\r\n    let sourceLarge = document.createElement(\"source\");\r\n    let imgDefaut = document.createElement(\"img\");\r\n\r\n    if (typeof image.fileNames.large === 'string') {\r\n        sourceLarge.setAttribute(\"srcset\", image.fileNames.large);\r\n    } else {\r\n        const largePath = await image.fileNames.large;\r\n        sourceLarge.setAttribute(\"srcset\", largePath);\r\n    }\r\n    sourceLarge.setAttribute(\"media\", \"(min-width: 1080px)\");\r\n    sourceLarge.setAttribute(\"alt\", image.title);\r\n\r\n    if (typeof image.fileNames.small === 'string') {\r\n        imgDefaut.setAttribute(\"src\", image.fileNames.small);\r\n    } else {\r\n        const smallPath = await image.fileNames.small;\r\n        imgDefaut.setAttribute(\"src\", smallPath);\r\n    }\r\n    imgDefaut.setAttribute(\"alt\", image.title);\r\n\r\n    newPictureContainer.append(sourceLarge, imgDefaut);\r\n    return newPictureContainer;\r\n}\r\n\r\nasync function displayPictures() {\r\n    const resolvedPhotos = await Promise.all(PhotoCollection);\r\n    resolvedPhotos.forEach(async (photoPromise) => {\r\n        const photo = await photoPromise;\r\n        pictureGrid?.appendChild(await createOnePicture(photo));\r\n    });\r\n}\r\n\r\n\r\n/* ********** Initialization ********** */\r\ndisplayPictures();\r\n(console.log(\"okay!\"));"]}